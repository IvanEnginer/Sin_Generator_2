
GccApplication116.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000007e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000d2  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000102  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000200  00000000  00000000  00000122  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e4  00000000  00000000  00000322  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000018d  00000000  00000000  00000406  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000018f  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  00000747  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	02 d0       	rcall	.+4      	; 0x22 <main>
  1e:	2d c0       	rjmp	.+90     	; 0x7a <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
	DDRB=0x0F;
  22:	8f e0       	ldi	r24, 0x0F	; 15
  24:	87 bb       	out	0x17, r24	; 23
	PORTB=0x00;
  26:	18 ba       	out	0x18, r1	; 24
	
    while(1)
    {
	PORTB=(1<<PB0);
  28:	81 e0       	ldi	r24, 0x01	; 1
  2a:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  2c:	e7 ea       	ldi	r30, 0xA7	; 167
  2e:	f1 e6       	ldi	r31, 0x61	; 97
  30:	31 97       	sbiw	r30, 0x01	; 1
  32:	f1 f7       	brne	.-4      	; 0x30 <main+0xe>
  34:	00 c0       	rjmp	.+0      	; 0x36 <main+0x14>
  36:	00 00       	nop
	_delay_ms(100);	
	PORTB=(0<<PB0);
  38:	18 ba       	out	0x18, r1	; 24
  3a:	ef e4       	ldi	r30, 0x4F	; 79
  3c:	f3 ec       	ldi	r31, 0xC3	; 195
  3e:	31 97       	sbiw	r30, 0x01	; 1
  40:	f1 f7       	brne	.-4      	; 0x3e <__SP_L__+0x1>
  42:	00 c0       	rjmp	.+0      	; 0x44 <__SREG__+0x5>
  44:	00 00       	nop
	_delay_ms(200);
	PORTB=(1<<PB0);
  46:	88 bb       	out	0x18, r24	; 24
  48:	ff e7       	ldi	r31, 0x7F	; 127
  4a:	28 e3       	ldi	r18, 0x38	; 56
  4c:	31 e0       	ldi	r19, 0x01	; 1
  4e:	f1 50       	subi	r31, 0x01	; 1
  50:	20 40       	sbci	r18, 0x00	; 0
  52:	30 40       	sbci	r19, 0x00	; 0
  54:	e1 f7       	brne	.-8      	; 0x4e <__SREG__+0xf>
  56:	00 c0       	rjmp	.+0      	; 0x58 <__SREG__+0x19>
  58:	00 00       	nop
	_delay_ms(400);
	PORTB=(0<<PB0);
  5a:	18 ba       	out	0x18, r1	; 24
  5c:	ef e4       	ldi	r30, 0x4F	; 79
  5e:	f3 ec       	ldi	r31, 0xC3	; 195
  60:	31 97       	sbiw	r30, 0x01	; 1
  62:	f1 f7       	brne	.-4      	; 0x60 <__SREG__+0x21>
  64:	00 c0       	rjmp	.+0      	; 0x66 <__SREG__+0x27>
  66:	00 00       	nop
	_delay_ms(200);
	PORTB=(1<<PB0);
  68:	88 bb       	out	0x18, r24	; 24
  6a:	e7 ea       	ldi	r30, 0xA7	; 167
  6c:	f1 e6       	ldi	r31, 0x61	; 97
  6e:	31 97       	sbiw	r30, 0x01	; 1
  70:	f1 f7       	brne	.-4      	; 0x6e <__SREG__+0x2f>
  72:	00 c0       	rjmp	.+0      	; 0x74 <__SREG__+0x35>
  74:	00 00       	nop
	_delay_ms(100);
	PORTB=(0<<PB0);   
  76:	18 ba       	out	0x18, r1	; 24
  78:	d8 cf       	rjmp	.-80     	; 0x2a <main+0x8>

0000007a <_exit>:
  7a:	f8 94       	cli

0000007c <__stop_program>:
  7c:	ff cf       	rjmp	.-2      	; 0x7c <__stop_program>
